{"ast":null,"code":"var _jsxFileName = \"/home/loureiro/Documentos/projetos_alura/formacao_react_js/react_desenvolvendo_com_javascript/organo/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Banner from './componentes/Banner/Banner';\nimport Formulario from './componentes/Formulario';\nimport Time from './componentes/Time';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const times = [{\n    nome: 'Front-End',\n    corPrimaria: '#82CFFA',\n    corSecundaria: '#E8F8FF'\n  }\n  // outros times...\n  ];\n  const [colaboradores, setColaboradores] = useState([]);\n  const [confirmarCard, setConfirmarCard] = useState(false);\n  const aoNovoColaboradorAdicionado = colaborador => {\n    mensagemAlerta(colaborador);\n  };\n  const mensagemAlerta = colaborador => {\n    Swal.fire({\n      title: \"Deseja criar o card?\",\n      text: \"Ao confirmar, será adicionado um card a este colaborador(a).\",\n      icon: \"question\",\n      showConfirmButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"OK\",\n      showCancelButton: true\n    }).then(result => {\n      if (result.isConfirmed) {\n        setColaboradores([...colaboradores, colaborador]);\n        Swal.fire({\n          position: \"top-end\",\n          title: \"Sucesso!\",\n          text: \"Adicionado card com sucesso.\",\n          icon: \"success\",\n          timer: 2000,\n          showConfirmButton: false\n        });\n        setConfirmarCard(true);\n      }\n    });\n  };\n  useEffect(() => {\n    // Aqui você pode fazer o que precisa quando confirmarCard é atualizado\n    console.log(\"confirmarCard foi atualizado:\", confirmarCard);\n  }, [confirmarCard]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formulario, {\n      times: times.map(time => time.nome),\n      aoColaboradorCadastrado: colaborador => aoNovoColaboradorAdicionado(colaborador),\n      confirmarCard: confirmarCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), times.map(time => /*#__PURE__*/_jsxDEV(Time, {\n      nome: time.nome,\n      corPrimaria: time.corPrimaria,\n      corSecundaria: time.corSecundaria,\n      colaboradores: colaboradores.filter(colaborador => colaborador.time === time.nome)\n    }, time.nome, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lF+L52eapFUPbuhCaUrc/5vn79k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Banner","Formulario","Time","Swal","jsxDEV","_jsxDEV","App","_s","times","nome","corPrimaria","corSecundaria","colaboradores","setColaboradores","confirmarCard","setConfirmarCard","aoNovoColaboradorAdicionado","colaborador","mensagemAlerta","fire","title","text","icon","showConfirmButton","confirmButtonColor","cancelButtonColor","confirmButtonText","showCancelButton","then","result","isConfirmed","position","timer","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","time","aoColaboradorCadastrado","filter","_c","$RefreshReg$"],"sources":["/home/loureiro/Documentos/projetos_alura/formacao_react_js/react_desenvolvendo_com_javascript/organo/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Banner from './componentes/Banner/Banner';\nimport Formulario from './componentes/Formulario';\nimport Time from './componentes/Time';\nimport Swal from 'sweetalert2';\n\nfunction App() {\n  const times = [\n    {\n      nome: 'Front-End',\n      corPrimaria: '#82CFFA',\n      corSecundaria: '#E8F8FF',\n    },\n    // outros times...\n  ];\n\n  const [colaboradores, setColaboradores] = useState([]);\n  const [confirmarCard, setConfirmarCard] = useState(false);\n\n  const aoNovoColaboradorAdicionado = (colaborador) => {\n    mensagemAlerta(colaborador);\n  };\n\n  const mensagemAlerta = (colaborador) => {\n    Swal.fire({\n      title: \"Deseja criar o card?\",\n      text: \"Ao confirmar, será adicionado um card a este colaborador(a).\",\n      icon: \"question\",\n      showConfirmButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"OK\",\n      showCancelButton: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setColaboradores([...colaboradores, colaborador]);\n        Swal.fire({\n          position: \"top-end\",\n          title: \"Sucesso!\",\n          text: \"Adicionado card com sucesso.\",\n          icon: \"success\",\n          timer: 2000,\n          showConfirmButton: false,\n        });\n\n        setConfirmarCard(true);\n      }\n    });\n  };\n\n  useEffect(() => {\n    // Aqui você pode fazer o que precisa quando confirmarCard é atualizado\n    console.log(\"confirmarCard foi atualizado:\", confirmarCard);\n  }, [confirmarCard]);\n\n  return (\n    <div className=\"App\">\n      <Banner />\n      <Formulario\n        times={times.map(time => time.nome)}\n        aoColaboradorCadastrado={colaborador => aoNovoColaboradorAdicionado(colaborador)}\n        confirmarCard={confirmarCard}\n      />\n      {times.map(time => (\n        <Time\n          key={time.nome}\n          nome={time.nome}\n          corPrimaria={time.corPrimaria}\n          corSecundaria={time.corSecundaria}\n          colaboradores={colaboradores.filter(colaborador => colaborador.time === time.nome)}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}