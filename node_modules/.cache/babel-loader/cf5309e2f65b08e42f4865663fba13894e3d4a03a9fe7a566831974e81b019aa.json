{"ast":null,"code":"var _jsxFileName = \"/home/loureiro/Documentos/projetos_alura/formacao_react_js/react_desenvolvendo_com_javascript/organo/src/componentes/CampoTexto/index.js\";\n// import { useState } from 'react'\nimport './CampoTexto.css';\n\n/** criado a função */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampoTexto = props => {\n  /** hooks onde é definido o estado do valor e set(como alterar) do valor */\n  //const [valor, setValor] = useState('') /** ao mudar o estado, o react renderiza novamente */\n\n  /** criado a função que ao mudar no input*/\n  const aoDigitado = evento => {\n    // setValor(evento.target.value) /** obtendo o novo valor no value e definindo no setValor */\n    props.aoAlterado(evento.target.value);\n    // console.log(props.valor)\n    console.log(evento.target.value);\n  };\n  return (\n    /*#__PURE__*/\n    /** return JSX */\n    _jsxDEV(\"div\", {\n      className: \"campo-texto\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-texto-fontawesome\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"campo-texto-input\",\n          required: props.obrigatorio,\n          placeholder: props.placeholder,\n          type: props.type,\n          value: props.valor,\n          onChange: aoDigitado,\n          name: props.label.toLowerCase(),\n          id: props.label.toLowerCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"campo-texto-fontawesome-span\",\n          children: props.iconeLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  );\n};\n\n/** exportado a função */\n_c = CampoTexto;\nexport default CampoTexto;\n\n//**{`Digite seu ${props.label.toLowerCase()}`} templace sting */\nvar _c;\n$RefreshReg$(_c, \"CampoTexto\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","CampoTexto","props","aoDigitado","evento","aoAlterado","target","value","console","log","className","children","label","fileName","_jsxFileName","lineNumber","columnNumber","required","obrigatorio","placeholder","type","valor","onChange","name","toLowerCase","id","iconeLabel","_c","$RefreshReg$"],"sources":["/home/loureiro/Documentos/projetos_alura/formacao_react_js/react_desenvolvendo_com_javascript/organo/src/componentes/CampoTexto/index.js"],"sourcesContent":["// import { useState } from 'react'\nimport './CampoTexto.css'\n\n\n\n/** criado a função */\nconst CampoTexto = (props) => \n{\n    /** hooks onde é definido o estado do valor e set(como alterar) do valor */\n    //const [valor, setValor] = useState('') /** ao mudar o estado, o react renderiza novamente */\n\n    /** criado a função que ao mudar no input*/\n    const aoDigitado = (evento) => \n    {\n        // setValor(evento.target.value) /** obtendo o novo valor no value e definindo no setValor */\n        props.aoAlterado(evento.target.value)\n        // console.log(props.valor)\n        console.log(evento.target.value)\n    }\n\n    return ( /** return JSX */\n            <div className=\"campo-texto\">\n                <label>{props.label}</label>\n                <div className=\"campo-texto-fontawesome\">\n                    <input className=\"campo-texto-input\" required={props.obrigatorio} placeholder={props.placeholder} type={props.type} value={props.valor} \n                        onChange={aoDigitado} name={props.label.toLowerCase()} id={props.label.toLowerCase()} />\n                    <span className=\"campo-texto-fontawesome-span\">\n                        {props.iconeLabel}\n                    </span>\n                </div>\n            </div>\n        )\n        \n}\n\n/** exportado a função */\nexport default CampoTexto\n\n//**{`Digite seu ${props.label.toLowerCase()}`} templace sting */"],"mappings":";AAAA;AACA,OAAO,kBAAkB;;AAIzB;AAAA,SAAAA,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAIC,KAAK,IACzB;EACI;EACA;;EAEA;EACA,MAAMC,UAAU,GAAIC,MAAM,IAC1B;IACI;IACAF,KAAK,CAACG,UAAU,CAACD,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC;IACrC;IACAC,OAAO,CAACC,GAAG,CAACL,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED;IAAA;IAAS;IACDP,OAAA;MAAKU,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBX,OAAA;QAAAW,QAAA,EAAQT,KAAK,CAACU;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5BhB,OAAA;QAAKU,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACpCX,OAAA;UAAOU,SAAS,EAAC,mBAAmB;UAACO,QAAQ,EAAEf,KAAK,CAACgB,WAAY;UAACC,WAAW,EAAEjB,KAAK,CAACiB,WAAY;UAACC,IAAI,EAAElB,KAAK,CAACkB,IAAK;UAACb,KAAK,EAAEL,KAAK,CAACmB,KAAM;UACnIC,QAAQ,EAAEnB,UAAW;UAACoB,IAAI,EAAErB,KAAK,CAACU,KAAK,CAACY,WAAW,CAAC,CAAE;UAACC,EAAE,EAAEvB,KAAK,CAACU,KAAK,CAACY,WAAW,CAAC;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5FhB,OAAA;UAAMU,SAAS,EAAC,8BAA8B;UAAAC,QAAA,EACzCT,KAAK,CAACwB;QAAU;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;AAGlB,CAAC;;AAED;AAAAW,EAAA,GA7BM1B,UAAU;AA8BhB,eAAeA,UAAU;;AAEzB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}